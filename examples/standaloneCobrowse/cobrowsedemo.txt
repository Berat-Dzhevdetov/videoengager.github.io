// ==UserScript==
// @name         CoBrowse Demo
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Demonstration of CoBrowse functionality.
// @author       You
// @match        https://www.videoengager.com/*
// @grant        none
// ==/UserScript==

(async function main () {
  const veUrl = `${veUrl}`;
  const tenantId = `${tenantId}`;

  async function setupCoBrowse () {
    try {
      await requireAsync('https://videoengager.github.io/examples/standaloneCobrowse/veFloatingUI.js');
      const veFloatingUI = new VeFloatingUIHandler();
      await requireAsync('https://videoengager.github.io/videoengager/uilib/styles.css');
      await requireAsync(`${veUrl}/static/assets/veCobrowse.2.js`);

      await veCobrowse.init(tenantId, veUrl);
      veFloatingUI.insertVeCobrowse();
      setEventHandlers(veFloatingUI);
    } catch (error) {
      console.error('CoBrowse setup failed:', error);
    }
  }

  function setEventHandlers (veFloatingUI) {
    veCobrowse.on('initialized', () => veFloatingUI.showVENotification('CoBrowse is initialized!'));
    veCobrowse.on('ended', () => {
      veFloatingUI.closeExpandableContent();
      veFloatingUI.showVENotification('CoBrowse session is Ended!');
    });
    veCobrowse.on('started', (data) => {
      veFloatingUI.setCobrowseStarted();
      veFloatingUI.showVENotification('CoBrowse Started!');
    });
    veCobrowse.on('authorizing', () => veFloatingUI.showVENotification('Waiting for authorization!'));
    veCobrowse.on('created', (data) => {
      veFloatingUI.showVENotification('CoBrowse session Created!');
      veFloatingUI.setExpandableContent({ interactionId: data.code, interactionType: 'ID' });
    });

    veFloatingUI.buttons.startCobrowse.addEventListener('click', async () => {
      try {
        await veCobrowse.start();
      } catch (error) {
        veFloatingUI.showVENotification('CoBrowse is not loaded!');
        console.error('Error starting CoBrowse:', error);
      }
    });

    veFloatingUI.buttons.stopCobrowse.addEventListener('click', async () => {
      try {
        await veCobrowse.stop();
      } catch (error) {
        veFloatingUI.showVENotification(error.toString());
        console.error('Error stopping CoBrowse:', error);
      }
    });
  }

  setupCoBrowse();
})();

async function requireAsync (url) {
  return new Promise((resolve, reject) => {
    const fileType = url.split('.').pop();
    if (fileType === 'css') {
      const link = document.createElement('link');
      link.rel = 'stylesheet';
      link.href = url;
      document.head.appendChild(link);
      link.onload = resolve;
      link.onerror = () => reject(new Error(`Failed to load CSS: ${url}`));
    } else if (fileType === 'js') {
      const script = document.createElement('script');
      script.src = url;
      document.head.appendChild(script);
      script.onload = resolve;
      script.onerror = () => reject(new Error(`Failed to load script: ${url}`));
    } else {
      reject(new Error('Unsupported file type'));
    }
  });
}
